<!--

    Copyright (c) 2011, 2018 Oracle and/or its affiliates. All rights reserved.

    This program and the accompanying materials are made available under the
    terms of the Eclipse Distribution License v. 1.0, which is available at
    http://www.eclipse.org/org/documents/edl-v10.php.

    SPDX-License-Identifier: BSD-3-Clause

-->

<!-- steps to release give all of them together in one command : mvn release:clean release:prepare release:perform -->
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <parent>
        <groupId>org.eclipse.ee4j</groupId>
        <artifactId>project</artifactId>
        <version>1.0.2</version>
    </parent>

    <groupId>com.sun.xml.messaging.saaj</groupId>
    <artifactId>saaj-impl</artifactId>
    <version>1.5.1-SNAPSHOT</version>
    <description>
        Open source Reference Implementation of JSR-67: SOAP with Attachments API for Java (SAAJ MR: 1.4)
    </description>

    <scm>
        <connection>scm:git:git@github.com:eclipse-ee4j/metro-saaj.git</connection>
        <developerConnection>scm:git:git@github.com:eclipse-ee4j/metro-saaj.git</developerConnection>
        <url>https://github.com/eclipse-ee4j/metro-saaj</url>
        <tag>HEAD</tag>
    </scm>

    <licenses>
        <license>
            <name>Eclipse Distribution License - v 1.0</name>
            <url>http://www.eclipse.org/org/documents/edl-v10.php</url>
            <distribution>repo</distribution>
        </license>
    </licenses>

    <developers>
        <developer>
            <id>bravehorsie</id>
            <name>Roman Grigoriadi</name>
            <email>Roman.Grigoriadi@oracle.com</email>
        </developer>
        <developer>
            <id>lukasj</id>
            <name>Lukas Jungmann</name>
            <email>Lukas.Jungmann@oracle.com</email>
        </developer>
    </developers>

    <organization>
        <name>Oracle Corporation</name>
        <url>http://www.oracle.com/</url>
    </organization>

    <issueManagement>
        <system>IssueTracker</system>
        <url>https://github.com/eclipse-ee4j/metro-saaj/issues</url>
    </issueManagement>

    <mailingLists>
        <mailingList>
            <name>Metro mailing list</name>
            <post>metro-dev@eclipse.org</post>
            <subscribe>https://accounts.eclipse.org/mailing-list/metro-dev</subscribe>
            <unsubscribe>https://accounts.eclipse.org/mailing-list/metro-dev</unsubscribe>
            <archive>https://www.eclipse.org/lists/metro-dev</archive>
        </mailingList>
    </mailingLists>

    <properties>
        <findbugs.exclude>${project.basedir}/exclude.xml</findbugs.exclude>
        <findbugs.threshold>Low</findbugs.threshold>
        <upgrade.mods>${project.build.directory}/upgrade-mods</upgrade.mods>
        <mods>${project.build.directory}/mods</mods>
        <endorsed.dir>${project.build.directory}/endorsed</endorsed.dir>
        <proxyOpts/>
        <config.dir>${project.basedir}/etc/config</config.dir>
    </properties>

    <build>

        <sourceDirectory>src/java</sourceDirectory>
        <testSourceDirectory>src/test</testSourceDirectory>

        <testResources>
            <testResource>
                <directory>src/test/mime/data</directory>
            </testResource>
            <testResource>
                <directory>src/test/resources</directory>
            </testResource>
        </testResources>

        <pluginManagement>
            <plugins>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-compiler-plugin</artifactId>
                    <version>3.8.0</version>
                    <configuration>
                        <release>7</release>
                    </configuration>
                </plugin>
                <plugin>
                    <groupId>org.codehaus.mojo</groupId>
                    <artifactId>cobertura-maven-plugin</artifactId>
                    <version>2.7</version>
                </plugin>
                <plugin>
                    <groupId>org.glassfish.copyright</groupId>
                    <artifactId>glassfish-copyright-maven-plugin</artifactId>
                    <version>1.50</version>
                </plugin>
                <plugin>
                    <groupId>org.codehaus.mojo</groupId>
                    <artifactId>findbugs-maven-plugin</artifactId>
                    <version>3.0.5</version>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-surefire-plugin</artifactId>
                    <version>2.22.0</version>
                    <configuration>
                        <forkCount>1</forkCount>
                        <reuseForks>false</reuseForks>
                    </configuration>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-source-plugin</artifactId>
                    <version>3.0.1</version>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-javadoc-plugin</artifactId>
                    <version>3.0.1</version>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-enforcer-plugin</artifactId>
                    <version>3.0.0-M2</version>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-gpg-plugin</artifactId>
                    <version>1.6</version>
                </plugin>
            </plugins>
        </pluginManagement>

        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-dependency-plugin</artifactId>
                <executions>
                    <execution>
                        <id>copy-upgrade-module-path</id>
                        <phase>generate-sources</phase>
                        <goals>
                            <goal>copy-dependencies</goal>
                        </goals>
                        <configuration>
                            <outputDirectory>${upgrade.mods}</outputDirectory>
                            <silent>false</silent>
                            <includeArtifactIds>javax.xml.soap-api</includeArtifactIds>
                        </configuration>
                    </execution>
                    <execution>
                        <id>copy-module-path</id>
                        <phase>generate-sources</phase>
                        <goals>
                            <goal>copy-dependencies</goal>
                        </goals>
                        <configuration>
                            <outputDirectory>${mods}</outputDirectory>
                            <silent>false</silent>
                            <includeArtifactIds>stax-ex,mimepull</includeArtifactIds>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <executions>
                    <execution>
                        <id>default-compile</id>
                        <configuration>
                            <release>9</release>
                            <compilerArgs>
                                <arg>--upgrade-module-path</arg>
                                <arg>${upgrade.mods}</arg>
                            </compilerArgs>
                        </configuration>
                    </execution>
                    <execution>
                        <!--Replaces all files with 7, with exception to module-info -->
                        <id>base-compile</id>
                        <goals>
                            <goal>compile</goal>
                        </goals>
                        <configuration>
                            <release>7</release>
                            <compilerArgs>
                                <arg>-Djava.endorsed.dirs=${upgrade.mods}</arg>
                            </compilerArgs>
                            <excludes>
                                <exclude>module-info.java</exclude>
                            </excludes>
                        </configuration>
                    </execution>
                </executions>
                <configuration>
                    <compilerArgs>
                        <compilerArg>-Xlint:all</compilerArg>
                    </compilerArgs>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>cobertura-maven-plugin</artifactId>
                <configuration>
                    <formats>
                        <format>xml</format>
                    </formats>
                    <check>
                        <totalLineRate>45</totalLineRate>
                        <packageLineRate>45</packageLineRate>
                        <haltOnFailure>true</haltOnFailure>
                    </check>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.glassfish.copyright</groupId>
                <artifactId>glassfish-copyright-maven-plugin</artifactId>
                <configuration>
                    <templateFile>${config.dir}/edl-copyright.txt</templateFile>
                    <excludeFile>${config.dir}/copyright-exclude</excludeFile>
                    <scm>git</scm>
                    <!-- skip files not under SCM-->
                    <scmOnly>true</scmOnly>
                    <!-- turn off warnings -->
                    <warn>true</warn>
                    <!-- for use with repair -->
                    <update>false</update>
                    <!-- check that year is correct -->
                    <ignoreYear>false</ignoreYear>
                </configuration>
                <executions>
                    <execution>
                        <phase>validate</phase>
                        <goals>
                            <goal>copyright</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>findbugs-maven-plugin</artifactId>
                <configuration>
                    <skip>${findbugs.skip}</skip>
                    <threshold>${findbugs.threshold}</threshold>
                    <findbugsXmlWithMessages>true</findbugsXmlWithMessages>
                    <excludeFilterFile>
                        exclude-common.xml,${findbugs.exclude}
                    </excludeFilterFile>
                    <fork>true</fork>
                    <jvmArgs>-Xms64m -Xmx256m</jvmArgs>
                </configuration>
                <dependencies>
                    <dependency>
                        <groupId>org.glassfish.findbugs</groupId>
                        <artifactId>findbugs</artifactId>
                        <version>1.0</version>
                    </dependency>
                </dependencies>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-release-plugin</artifactId>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-javadoc-plugin</artifactId>
                <configuration>
                    <additionalJOptions>
                        <additionalJOption>--upgrade-module-path</additionalJOption>
                        <additionalJOption>${upgrade.mods}</additionalJOption>
                        <additionalJOption>--module-path</additionalJOption>
                        <additionalJOption>${mods}</additionalJOption>
                    </additionalJOptions>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-plugin</artifactId>
                <configuration>
                    <argLine>${proxyOpts} --add-modules java.xml.soap --upgrade-module-path ${upgrade.mods}</argLine>
                </configuration>
            </plugin>
        </plugins>
    </build>

    <profiles>
        <!-- invoke unit tests against JDK like this:
         mvn clean test -DtestInJdk -Djdk.to.test=$jdk/home/path/bin/java
         -->
        <profile>
            <id>sources-profile</id>
            <activation>
                <property>
                    <name>!skipSources</name>
                </property>
            </activation>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-source-plugin</artifactId>
                        <executions>
                            <execution>
                                <id>attach-sources</id>
                                <phase>package</phase>
                                <goals>
                                    <goal>jar-no-fork</goal>
                                </goals>
                            </execution>
                        </executions>
                    </plugin>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-javadoc-plugin</artifactId>
                        <configuration>
                            <additionalparam>-Xdoclint:none</additionalparam>
                        </configuration>
                        <executions>
                            <execution>
                                <id>attach-javadocs</id>
                                <goals>
                                    <goal>jar</goal>
                                </goals>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>
        <profile>
            <id>jdk</id>
            <activation>
                <property>
                    <name>testInJdk</name>
                </property>
            </activation>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-surefire-plugin</artifactId>
                        <version>2.20.1</version>
                        <configuration>
                            <argLine>${proxyOpts} -Djdk.build=true</argLine>
                            <!-- some random non-existing directory to make sure the built classes are not found, instead the ones from jdk are used -->
                            <classesDirectory>jerreAbfAFgfreu</classesDirectory>
                            <excludes>
                                <!-- tests using RI specific API -->
                                <exclude>**/MimeUtilityTest.java</exclude>
                            </excludes>
                            <classpathDependencyScopeExcludes>compile</classpathDependencyScopeExcludes>
                            <classpathDependencyExcludes>
                                <classpathDependencyExcludes>javax.xml.soap:javax.xml.soap-api</classpathDependencyExcludes>
                                <classpathDependencyExcludes>org.jvnet.mimepull:mimepull</classpathDependencyExcludes>
                            </classpathDependencyExcludes>
                            <jvm>${jdk.to.test}</jvm>
                        </configuration>
                    </plugin>
                </plugins>
            </build>
        </profile>
        <profile>
            <id>jdk-sm</id>
            <activation>
                <property>
                    <name>testInJdkWithSM</name>
                </property>
            </activation>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-surefire-plugin</artifactId>
                        <version>2.20.1</version>
                        <configuration>
                            <argLine>${proxyOpts} -Djdk.build=true -Djava.security.manager -Djava.security.policy=./src/test/test.policy</argLine>
                            <!-- some random non-existing directory to make sure the built classes are not found, instead the ones from jdk are used -->
                            <classesDirectory>jerreAbfAFgfreu</classesDirectory>
                            <excludes>
                                <!-- tests using RI specific API -->
                                <exclude>**/MimeUtilityTest.java</exclude>
                            </excludes>
                            <classpathDependencyScopeExcludes>compile</classpathDependencyScopeExcludes>
                            <classpathDependencyExcludes>
                                <classpathDependencyExcludes>javax.xml.soap:javax.xml.soap-api</classpathDependencyExcludes>
                                <classpathDependencyExcludes>org.jvnet.mimepull:mimepull</classpathDependencyExcludes>
                            </classpathDependencyExcludes>
                            <jvm>${jdk.to.test}</jvm>
                        </configuration>
                    </plugin>
                </plugins>
            </build>
        </profile>
    </profiles>

    <dependencyManagement>
        <dependencies>
            <dependency>
                <groupId>javax.xml.soap</groupId>
                <artifactId>javax.xml.soap-api</artifactId>
                <version>1.4.0</version>
            </dependency>
            <dependency>
                <groupId>org.jvnet.mimepull</groupId>
                <artifactId>mimepull</artifactId>
                <version>1.9.7</version>
            </dependency>
            <dependency>
                <groupId>org.jvnet.staxex</groupId>
                <artifactId>stax-ex</artifactId>
                <version>1.7.8</version>
            </dependency>
            <dependency>
                <groupId>javax.xml.bind</groupId>
                <artifactId>jaxb-api</artifactId>
                <version>2.4.0-b180725.0427</version>
            </dependency>
            <dependency>
                <groupId>junit</groupId>
                <artifactId>junit</artifactId>
                <version>4.12</version>
                <scope>test</scope>
            </dependency>
            <dependency>
                <groupId>javax.servlet</groupId>
                <artifactId>servlet-api</artifactId>
                <version>2.5</version>
                <scope>test</scope>
            </dependency>
        </dependencies>
    </dependencyManagement>

    <dependencies>
        <dependency>
            <groupId>javax.xml.soap</groupId>
            <artifactId>javax.xml.soap-api</artifactId>
        </dependency>
        <dependency>
            <groupId>org.jvnet.mimepull</groupId>
            <artifactId>mimepull</artifactId>
        </dependency>
        <dependency>
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
        </dependency>
        <dependency>
            <groupId>javax.servlet</groupId>
            <artifactId>servlet-api</artifactId>
        </dependency>
        <dependency>
            <groupId>org.jvnet.staxex</groupId>
            <artifactId>stax-ex</artifactId>
        </dependency>
            <dependency>
                <groupId>javax.xml.bind</groupId>
                <artifactId>jaxb-api</artifactId>
            </dependency>
    </dependencies>

</project>
